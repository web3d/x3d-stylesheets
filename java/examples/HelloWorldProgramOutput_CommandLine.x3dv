#X3D V4.0 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Full
# [X3D] class=x3dModel.class
# [X3D] id=x3dModel.id
# [X3D] style=x3dModel.style
# [X3D] version=4.0
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-4.0.xsd
# [head]

# comment #1
# comment #2
# comment #3
# comment #4
COMPONENT Navigation:3
COMPONENT Shaders:1
COMPONENT CADGeometry:2
COMPONENT DIS:2
COMPONENT H-Anim:1
COMPONENT Grouping:1
COMPONENT Layering:1
 ### Error:  illegal <component name='Layering'/>
UNIT angle AngleUnitConversion 1.0
UNIT length LengthUnitConversion 1.0
UNIT force ForceFromPoundsToNewtons 4.4482
META "title" "HelloWorldProgramOutput.x3d"
META "info" "continued development and testing in progress"
### Info:  <meta name='info' content='continued development and testing in progress'/>
META "description" "Example HelloWorldProgram creates an X3D model using the X3D Java Scene Access Interface Library (X3DJSAIL)"
META "reference" "https://www.web3d.org/specifications/java/X3DJSAIL.html"
META "generator" "HelloWorldProgramOutput.java"
META "created" "6 September 2016"
META "modified" "4 July 2022"
META "generator" "X3D Java Scene Access Interface Library (X3DJSAIL)"
META "generator" "https://www.web3d.org/specifications/java/examples/HelloWorldProgram.java"
META "generator" "Netbeans https://www.netbeans.org"
META "creator" "Don Brutzman"
META "reference" "https://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/stylesheets/java/examples/HelloWorldProgramOutput.x3d"
META "reference" "Console output, ClassicVRML encoding, VRML97 encoding and pretty-print documentation:"
META "reference" "HelloWorldProgramOutput.txt"
META "reference" "HelloWorldProgramOutput.x3dv"
META "reference" "HelloWorldProgramOutput.wrl"
META "reference" "HelloWorldProgramOutput.html"
META "reference" "https://savage.nps.edu/X3dValidator?url=https://www.web3d.org/specifications/java/examples/HelloWorldProgramOutput.x3d"
META "identifier" "https://www.web3d.org/specifications/java/examples/HelloWorldProgramOutput.x3d"
META "license" "../license.html"

# [Scene] ========== ========== ==========

MetadataSet {
  name "topLevelSceneMetadata"
}
ViewpointGroup {
  description Available viewpoints
  DEF DefaultView Viewpoint {
    description "Hello X3DJSAIL"
  }
  DEF TopDownView Viewpoint {
    description "top-down view from above"
    orientation 1 0 0 -1.570796
    position 0 100 0
  }
}
NavigationInfo {
  type [ "EXAMINE" "FLY" "ANY"  ] 
}
DEF WorldInfoDEF WorldInfo {
  ### class='worldInfoNode.class'
  ### id='worldInfoNode.id'
  ### style='worldInfoNode.style'
  title "HelloWorldProgram produced by X3D Java SAI Library (X3DJSAIL)"
}
USE WorldInfoDEF
USE WorldInfoDEF
DEF scene.addChildMetadata MetadataString {
  name "test"
  value [ "Top-level root Metadata node beneath Scene needs to be one of '-children' in JSON encoding"  ] 
}
DEF scene.addChildLayerSetTest LayerSet {
}
DEF LogoGeometryTransform Transform {
  translation 0 1.5 0
  children [
      DEF siteAnchor Anchor {
        description "select for X3D Java SAI Library (X3DJSAIL) description"
        url [ "../X3DJSAIL.html" "https://www.web3d.org/specifications/java/X3DJSAIL.html" ]
        children [
            DEF BoxShape Shape {
              ### id='BoxShapeID'
              appearance Appearance {
                material DEF GreenMaterial Material {
                  diffuseColor 0 1 1
                  emissiveColor 0.8 0 0
                  transparency 0.1
                }
                texture ImageTexture {
                  url [ "images/X3dJavaSceneAccessInterfaceSaiLibrary.png" "https://www.web3d.org/specifications/java/examples/images/X3dJavaSceneAccessInterfaceSaiLibrary.png" ]
                }
              }
              geometry DEF test-NMTOKEN_regex.0123456789 Box {
                ### class='untextured'
              }
            }
        ]
      }
  ]
}
DEF LineShape Shape {
  appearance Appearance {
    material Material {
      emissiveColor 0.6 0.19607843 0.8
    }
  }
  geometry IndexedLineSet {
    coordIndex [ 0 1 2 3 4 0 ]
    coord Coordinate {
      point [ 0 1.5 0 2 1.5 0 2 1.5 -2 -2 1.5 -2 -2 1.5 0 0 1.5 0 ]
    }
  }
}
DEF BoxPathAnimator PositionInterpolator {
  key [ 0 0.125 0.375 0.625 0.875 1 ]
  keyValue [ 0 1.5 0 2 1.5 0 2 1.5 -2 -2 1.5 -2 -2 1.5 0 0 1.5 0 ]
}
DEF OrbitClock TimeSensor {
  cycleInterval 8.0
  loop TRUE
}
ROUTE OrbitClock.fraction_changed TO BoxPathAnimator.set_fraction
ROUTE BoxPathAnimator.value_changed TO LogoGeometryTransform.set_translation
DEF TextTransform Transform {
  translation 0 -1.5 0
  children [
      Shape {
        appearance Appearance {
          material USE GreenMaterial
        }
        geometry Text {
          string [ "X3D Java" "SAI Library" "X3DJSAIL" ]
          # metadata
          MetadataSet {
            name "EscapedQuotationMarksMetadataSet"
            value [
              MetadataString {
                name "quotesTestC"
                value [ "MFString example C backslash-escaped quotes: He said \"Immel did it!\""  ] 
              }
              MetadataString {
                name "extraChildTest"
                value [ "checks MetadataSet addValue() method"  ] 
              }
            ]
          }
          fontStyle FontStyle {
            justify [ "MIDDLE" "MIDDLE"  ] 
          }
        }
      }
      Collision {
 proxy
          DEF ProxyShape Shape {
            geometry Text {
              string [ "One, Two, Text" "" "He said, \"Immel did it!\" \"\"" ]
            }
          }
 children [
          # test containerField='proxy'
 ]
      }
      # It's a beautiful world
      # ... for you!
      # https://en.wikipedia.org/wiki/Beautiful_World_(Devo_song)
  ]
}
# repeatedly spin 180 degrees as a readable special effect
DEF SpinInterpolator OrientationInterpolator {
  key [ 0 0.5 1 ]
  keyValue [ 0 1 0 4.712389 0 1 0 0 0 1 0 1.5707964 ]
}
DEF SpinClock TimeSensor {
  cycleInterval 5.0
  loop TRUE
}
ROUTE SpinClock.fraction_changed TO SpinInterpolator.set_fraction
ROUTE SpinInterpolator.value_changed TO TextTransform.rotation
DEF BackgroundGroup Group {
  children [
      DEF GradualBackground Background {
      }
      DEF colorTypeConversionScript Script {
        inputOnly      SFColor	colorInput
        outputOnly     MFColor	colorsOutput

	url [ "ecmascript: // ### X3D Browser.print() not supported by all VRML97 viewers, instead simply using print()


function colorInput (eventValue) // Example source code
{
   colorsOutput = new MFColor(eventValue); // assigning value sends output event
// Browser.print('colorInput=' + eventValue + ', colorsOutput=' + colorsOutput + '\n');
}

      
" ]
      }
      DEF ColorAnimator ColorInterpolator {
        key [ 0 0.5 1 ]
        keyValue [ 0.9411765 1 1 0.29411766 0 0.50980395 0.9411765 1 1 ]
      }
      DEF ColorClock TimeSensor {
        cycleInterval 60.0
        loop TRUE
      }
  ]
ROUTE colorTypeConversionScript.colorsOutput TO GradualBackground.skyColor
ROUTE ColorAnimator.value_changed TO colorTypeConversionScript.colorInput
ROUTE ColorClock.fraction_changed TO ColorAnimator.set_fraction
}
PROTO ArtDeco01Material [
  # [appinfo] tooltip: ArtDeco01Material prototype is a Material node

  inputOutput    SFString	description "ArtDeco01Material prototype is a Material node"    # [appinfo] tooltip for descriptionField

  inputOutput    SFBool	enabled TRUE
] {
  Material {
    ambientIntensity 0.25
    diffuseColor 0.282435 0.085159 0.134462
    shininess 0.127273
    specularColor 0.276305 0.11431 0.139857
  }
  TouchSensor {
    description "within ProtoBody"
           ### Warning:  IS/connect ignored for nodeField='description' since not a supported field in VRML97 for parent TouchSensor
 ### description IS description
      enabled IS enabled
  }
}
EXTERNPROTO ArtDeco02Material [ 
  # [appinfo] this is a different Material node

  # [HelloWorldProgram diagnostic] artDeco02ExternProtoDeclare.getNodeType()="ERROR_UNKNOWN_EXTERNPROTODECLARE_NODE_TYPE: ExternProtoDeclare name='ArtDeco02Material' type cannot be remotely accessed at run time. TODO X3DJSAIL needs to add further capability that retrieves the ExternProtoDeclare file."
  inputOutput    SFString	description    # [appinfo] tooltip for descriptionField

][
"https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ArtDecoPrototypesExcerpt.x3d#ArtDeco02Material" "https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ArtDecoPrototypesExcerpt.x3dv#ArtDeco02Material"
 ]
# Tested ArtDeco01ProtoInstance, ArtDeco02ProtoInstance for improper node type when ProtoInstance is added in wrong place
DEF TestShape1 Shape {
  appearance DEF TestAppearance1 Appearance {
    material  ArtDeco01Material {
      description  "ArtDeco01Material can substitute for a Material node"
    }
  }
  geometry Sphere {
    radius 0.001
  }
}
DEF TestShape2 Shape {
  appearance DEF TestAppearance2 Appearance {
    material DEF ArtDeco02MaterialDEF  ArtDeco02Material {
      description  "ArtDeco02Material can substitute for another Material node"
    }
  }
  geometry Cone {
    bottomRadius 0.001
    height 0.001
  }
}
DEF TestShape3 Shape {
  appearance DEF TestAppearance3 Appearance {
    material USE ArtDeco02MaterialDEF
  }
  geometry Cylinder {
    height 0.001
    radius 0.001
  }
}
DEF inlineScene Inline {
  url [ "someOtherScene.x3d" "https://www.web3d.org/specifications/java/examples/someOtherScene.x3d" ]
}
IMPORT {
  AS WorldInfoDEF2
  importedDEF WorldInfoDEF
  inlineDEF inlineScene
}
EXPORT {
  AS WorldInfoDEF3
  localDEF WorldInfoDEF
}
PROTO MaterialModulator [
  # [appinfo] mimic a Material node and modulate fields as an animation effect


 # documentation: https://x3dgraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/MaterialModulatorIndex.html

  inputOutput    SFBool	enabled TRUE
  inputOutput    SFColor	diffuseColor 0 0 0
  inputOutput    SFColor	emissiveColor 0.05 0.05 0.5
  inputOutput    SFColor	specularColor 0 0 0
  inputOutput    SFFloat	transparency 0.0
  inputOutput    SFFloat	shininess 0.0
  inputOutput    SFFloat	ambientIntensity 0.0
] {
  DEF MaterialNode Material {
          diffuseColor IS diffuseColor
      emissiveColor IS emissiveColor
      specularColor IS specularColor
      transparency IS transparency
      shininess IS shininess
      ambientIntensity IS ambientIntensity
  }
  DEF MaterialModulatorScript Script {
    inputOutput    SFBool	enabled IS enabled
    inputOutput    SFColor	diffuseColor IS diffuseColor
    outputOnly     SFColor	newColor
    inputOnly      SFTime	clockTrigger
                
	url [ "ecmascript: // ### X3D Browser.print() not supported by all VRML97 viewers, instead simply using print()

function initialize ()
{
    newColor = diffuseColor; // start with correct color
}
function set_enabled (newValue)
{
	enabled = newValue;
}
function clockTrigger (timeValue)
{
    if (!enabled) return;
    red   = newColor.r;
    green = newColor.g;
    blue  = newColor.b;
    
    // note different modulation rates for each color component, % is modulus operator
    newColor = new SFColor ((red + 0.02) % 1, (green + 0.03) % 1, (blue + 0.04) % 1);
	if (enabled)
	{
		Browser.print ('diffuseColor=(' + red + ',' + green + ',' + blue + ') newColor=' + newColor.toString() + '\n');
	}
}

        
" ]
  }
}
# Test success: declarative statement createDeclarativeShapeTests()
DEF DeclarativeGroupExample Group {
  children [
      Shape {
        appearance DEF DeclarativeAppearanceExample Appearance {
          material DEF MyMaterialModulator  MaterialModulator {
          }
        }
        geometry Cone {
          bottom FALSE
          bottomRadius 0.05
          height 0.1
        }
      }
      # Test success: declarativeGroup.addChild() singleton pipeline method
  ]
}
# Test success: declarative statement addChild()
# Test success: x3dModel.findNodeByDEF(DeclarativeAppearanceExample) = <Appearance DEF='DeclarativeAppearanceExample'/> i.e. <Appearance DEF='DeclarativeAppearanceExample'> <!- - DeclarativeMaterialExample gets overridden by subsequently added MaterialModulator ProtoInstance - -> <ProtoInstance DEF='MyMaterialModulator' name='MaterialModulator' containerField='material'/> </Appearance>
# Test success: x3dModel.findElementByNameValue(findThisNameValue) = <MetadataString DEF='FindableMetadataStringTest' name='findThisNameValue' value='"test case"'/>
# Test success: x3dModel.findElementByNameValue("ArtDeco01Material", "ProtoDeclare") found
# Test success: x3dModel.findElementByNameValue("MaterialModulator", "ProtoDeclare") found
# Test success: x3dModel.findElementByNameValue("MaterialModulator", "ProtoInstance") found
DEF TestFieldObjectsGroup Group {
}
Sound {
  location 0 1.6 0
  source AudioClip {
    description "chimes"
    url [ "chimes.wav" "https://www.web3d.org/x3d/content/examples/ConformanceNist/Sounds/AudioClip/chimes.wav" ]
  }
}
Sound {
  location 0 1.6 0
  source MovieTexture {
    description mpgsys.mpg from ConformanceNist suite
    url [ "mpgsys.mpg" "https://www.web3d.org/x3d/content/examples/ConformanceNist/Appearance/MovieTexture/mpgsys.mpg" ]
  }
}
# Test success: Anchor.isNode()=true, siteAnchor.isNode()=true
# Test success: Anchor.isStatement()=false, siteAnchor.isStatement()=false
# Test success: ROUTE.isNode()=false, orbitPositionROUTE.isNode()=false
# Test success: ROUTE.isStatement()=true, orbitPositionROUTE.isStatement()=true
# Test success: CommentsBlock.isNode()=false, testComments.isNode()=false
# Test failure: CommentsBlock.isStatement()=true, testComments.isStatement()=true
DEF ExtrusionShape Shape {
  appearance DEF TransparentAppearance Appearance {
    material Material {
      transparency 1.0
    }
  }
  geometry DEF ExampleExtrusion Extrusion {
  }
}
Group {
  children [
      # Test MFNode children array as an ordered list consisting of comments, statements, ProtoInstance and nodes
      PROTO NewWorldInfo [
         ### Warning:  ProtoInterface <field name='description'/> is unreferenced in ProtoBody with no corresponding IS/connect/@protoField
initializeOnly SFString	description ""
] {
        WorldInfo {
        }
}
      DEF Proto1  NewWorldInfo {
        description  "testing 1 2 3"
      }
      DEF Node2 Group {
      }
      DEF Proto3  NewWorldInfo {
      }
      DEF Node4 Transform {
      }
      # Test satisfactorily creates MFNode children array as an ordered list with mixed content
  ]
}
PROTO ShaderProto [
] {
  ProgramShader {
  }
}
Shape {
  appearance Appearance {
    shaders DEF TestShader1 ProgramShader {
      programs DEF TestShader2 ShaderProgram {
      }
    }
    ProgramShader DEF TestShader3  ShaderProto {
    }
    shaders DEF TestShader4 ComposedShader {
      parts DEF TestShader5 ShaderPart {
      }
    }
  }
}
DEF SpecialtyNodes Transform {
  children [
      CADLayer {
        children [
            CADAssembly {
              children [
                  CADPart {
                    children [
                        CADFace {
                        }
                    ]
                  }
              ]
            }
        ]
      }
      EspduTransform {
      }
      ReceiverPdu {
        receivedPower 0.0
      }
      SignalPdu {
      }
      TransmitterPdu {
        relativeAntennaLocation 0 0 0
        transmitFrequencyBandwidth 0.0
      }
      DISEntityManager {
        DISEntityTypeMapping {
        }
      }
  ]
}
EspduTransform {
  children [
      WorldInfo {
      }
  ]
}
ReceiverPdu {
  receivedPower 0.0
}
SignalPdu {
}
TransmitterPdu {
  relativeAntennaLocation 0 0 0
  transmitFrequencyBandwidth 0.0
}
DISEntityManager {
  DISEntityTypeMapping {
  }
}
LoadSensor {
  watchList [
    USE siteAnchor
    USE inlineScene
    DISEntityTypeMapping {
    }
    GeoMetadata {
    }
    AudioClip {
    }
    ImageCubeMapTexture {
    }
    ImageTexture3D {
    }
    ImageTexture {
    }
    MovieTexture {
    }
    Script {
 ### Error:  Script node has neither url nor contained code in CDATA section

	url [  ]
    }
    PackagedShader {
    }
    ShaderPart {
    }
    ShaderProgram {
    }
  ]
}
 ### Warning:  no ROUTE found for LoadSensor output
